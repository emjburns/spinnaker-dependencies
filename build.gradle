buildscript {
    repositories {
      jcenter()
      maven { url "https://spinnaker.bintray.com/gradle" }
      maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.netflix.nebula:nebula-release-plugin:8.0.3'
        classpath 'com.netflix.spinnaker.gradle:spinnaker-dependency-bump-plugin:5.2.1'

        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

apply plugin: 'idea'
apply plugin: 'nebula.nebula-release'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'maven'

group = 'com.netflix.spinnaker'
description = 'Common dependencies for Spinnaker'

repositories {
  maven { url "https://plugins.gradle.org/m2/" }
}

release {
  defaultVersionStrategy = nebula.plugin.release.NetflixOssStrategies.SNAPSHOT
}

publishing {
  publications {
    spinnakerDependencies(MavenPublication) {
      artifact 'src/spinnaker-dependencies.yml'
    }
  }
}

def prop = { String name ->
  project.hasProperty(name) ? project.property(name) : ''
}

bintray {
  user = prop('bintrayUser')
  key = prop('bintrayKey')
  publications = ['spinnakerDependencies']
  publish = true
  dryRun = false
  pkg {
    userOrg = 'spinnaker'
    repo = 'spinnaker'
    name = project.name
    desc = prop('description')
    licenses = ['Apache-2.0']
    websiteUrl = 'https://github.com/spinnaker/spinnaker-dependencies'
    vcsUrl = 'https://github.com/spinnaker/spinnaker-dependencies.git'
    issueTrackerUrl = 'https://github.com/spinnaker/spinnaker/issues'
    attributes = [:]
    version {
      name = project.version
      vcsTag = "v${project.version}"
      attributes = [:]
    }
  }
}

project.gradle.taskGraph.whenReady { graph ->
  bintrayUpload.onlyIf {
    graph.hasTask(':final') || graph.hasTask(':candidate')
  }
}

task('updateDependencies', description: "Rebuilds spinnaker-dependencies.yml based on Spring Boot's BOM.") << {
  def deps = dependencyManagement.importedProperties
  deps['spring-boot.version'] = springBootVersion

  def updatedListOfDeps = new File('src/spinnaker-dependencies.template').text

  println "Updating version settings based on ${springBootVersion}..."

  deps.keySet().each { lib ->
    updatedListOfDeps = updatedListOfDeps.replaceAll('\\{\\{' + lib + '}}', deps[lib])
  }

  new File('src/spinnaker-dependencies.yml').withWriter { writer ->
    writer.write(updatedListOfDeps)
  }
}

tasks.build.dependsOn(updateDependencies)
tasks.bintrayUpload.dependsOn(build)
tasks.publishToMavenLocal.dependsOn(build)
tasks.release.dependsOn(updateDependencies, bintrayUpload)

apply plugin: com.netflix.spinnaker.gradle.dependency.SpinnakerDependencyBumpPlugin
